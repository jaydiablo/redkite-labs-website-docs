RedKite CMS
===========
RedKite CMS is an Open Source Content Management System built on top of Symfony2 
and Twitter-Bootstrap frameworks.

You will be able to manage the content of your website inline, using an awesome interface 
designed to increase the quality of the user experience.

You are not required to have technical skills on web programming to build an awesome website
using this CMS.

The most important features of this Content Management System are:

Easy to configure
-----------------
RedKite CMS can be installed both from console, just running a single command or from 
a web interface, filling up the required fields and you are done!

Edit contents in place
----------------------
RedKite CMS lets you **manage contents directly on the web page**, just open the page
you want to edit and click on the content to start editing it. Textual (html) contents
are edited directly on the page, while other contents like images, carousels, buttons,
scripts, files and more over have the editor rendered inside a popover rendered under the 
content itself. Changes are immediately displayed on the page.

Multi-language
--------------
RedKite is a multi-language CMS: you can add **as many languages as you need** and
translate them directly on the CMS. 

SEO friendly
------------
Pages are **SEO friendly** (Search Engines Optimization), in fact, when you create a 
new page, you are encouraged to fill up the required fields used by search engines
to index the pages of your website.

A permalink (permanent link) identifies each page. They are are language sensitive, this 
means you can natively localize the page's url, giving it a great name for each language 
of your website. 

Multi users environment
-----------------------
RedKite CMS is a multi user environment. The website administrators can manage users
and **grant the permissions on website resources**.

A resource locker algorithm is implemented to **avoid conflicts between users** when 
more than one user try to manage the same resource at the same time.

Themes
------
Add existing themes to your website or create a new one is really simple with RedKite CMS.
Templates are written in Twig the awesome predefined template engine provided by Symfony2
standard edition.

Any html file can be easily converted to be used with RedKite CMS just converting the 
content to manage with a twig function.

Server side contents
--------------------
You can display contents generated at server-side, for example some data extracted from a 
database, implementing a listener and replacing the original content with the one
processed by the server or add a Symfony2 controller and extending a the template
generated by RedKite CMS.

Extensible on steroids
----------------------
RedKite is designed to be extensible in the Symfony2 way. First of all, it provides a
cohesive and strong set of API and, thanks to the powerful **Event System** provided by the
framework, it is fully extensible and configurable. 

This means that you are able to change the default behaviour of the CMS, without touch
the core.

In addiction RedKite CMS can be extended by adding new `Themes`_ and `Blocks`_. They are
packed as a **Symfony2 bundles** with some extra configurations, and can be plugged-in 
and used in seconds. 


Automated test suite
--------------------
RedKite CMS comes with a completed **Test Suite** which covers at least the 98% of the
application. 

Thank to automated tests RedKite CMS is strong and reliable.

Decoupled
---------
Last but not least RedKite CMS is decoupled from the web site you are building.

This means that your website does not require RedKite CMS itself to work in production,
and that your website is not bound to a particular ORM.

In fact, **RedKite CMS works with Propel**, but your website may work with **Doctrine**:
this is just up to you.

That is a great advantage for your website, because it is not bound to a particular
application, RedKite CMS in this case, so it can be maintained as a standard Symfony2
application if you'd decide to leave the CMS in the future.